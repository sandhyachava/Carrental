
from datetime import datetime,timedelta


class carrental:
    def __init__(self,available_car_list):
        self.available_car_list=available_car_list
        self.rented_car_list ={}
       
           
    def available_cars(self):
        print("\ncars_available_for rent\n")
        for car,quantity in self.available_car_list.items():        
            print(f"{car} : {quantity}")
           
   #create methods to rent cars hourly ,Daily, weekly  
  
   #Keeping the methods as-is though we ahev code repetition  in rent_car_* methods
   #Ideally define new method to combine code below and just call the method for different rental_mode

   def rent_car(self,car,number_cars,rental_time,rental_type,price):
        if car in self.cars_availble and number_cars>0 and number_cars <= self.cars_availble[car]:
            print("self cars",self.cars_availble)
            self.cars_availble[car]=self.cars_availble[car]-number_cars
            self.rental_records[car]=(number_cars,rental_time,rental_type,price)    
            print(f"{number_cars} {car} rented for {rental_type}")

            return True
        else:
            print("Requested car quantity is not avaible at this time")

   def rent_car_hourly(self,car,number_cars,rental_time):
       return self.rent_car(car,number_cars,rental_time,"Hourly",self.v_hourly)   
     
   def rent_car_daily(self,car,number_cars,rental_time):
       return self.rent_car(car,number_cars,rental_time,"Daily",self.v_daily) 
   
   def rent_car_weekly(self,car,number_cars,rental_time):
       return self.rent_car(car,number_cars,rental_time,"Weekly",self.v_weekly) 
 
  # create method for return car
    def return_car(self,car):
        if car in self.rented_car_list:
            car_quantity,rental_mode,rental_time,price = self.rented_car_list.pop(car)

            rental_end_time = datetime.now()
            rental_duration = rental_end_time-rental_time
           
            if rental_mode == "hourly":
                bill = (rental_duration.seconds/3600) * price * car_quantity
            elif rental_mode == "daily":  
                bill = rental_duration.days * price * car_quantity
            elif rental_mode == "weekly":
                 bill = (rental_duration.days//7) * price * car_quantity
                   
            self.available_car_list[car] =  self.available_car_list[car] +car_quantity
            print(f"Please pay the amount {bill}")
            print(f"\nThanks for returning {car_quantity} {car} cars")
        else:
            print('please try returning the car again')
